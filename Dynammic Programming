//322. Coin Change
//2D Array, where rows=coin, col=amt.
//Create the 
//dp[i,j]= min(dp(i,j-c)+1, dp(i-1,j))
public class Solution {
    public int CoinChange(int[] coins, int amount) {
        int rowSize=coins.Length+1;
        int[,] dp= new int[rowSize, amount+1];
        for(int i=0; i<rowSize; i++)
        {
            dp[i,0]=0;
        }
        for(int j=1; j<=amount; j++)
        {
            dp[0,j]= Int32.MaxValue;
        }
        for(int i=1; i<rowSize; i++)
        { 
            int c=coins[i-1];
            for(int j=1; j<=amount; j++)
            {
                if(c>j || dp[i,j-c]==Int32.MaxValue)
                {
                    dp[i,j]=dp[i-1,j];
                }
                else
               dp[i,j]= Math.Min(dp[i,j-c]+1, dp[i-1,j]);
            }
        }
        return dp[rowSize-1,amount]==Int32.MaxValue ? -1:dp[rowSize-1,amount];
    }
}
